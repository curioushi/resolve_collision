syntax = "proto2";
package sim_world;

service SimWorld { rpc NewScene(NewSceneRequest) returns (Empty); }

message Empty {}

message Range {
  required float min = 1;
  required float max = 2;
}

message Position {
  required float x = 1;
  required float y = 2;
  required float z = 3;
}

message Rotation {
  required float x = 1;
  required float y = 2;
  required float z = 3;
  required float w = 4;
}

message Pose {
  required Position position = 1;
  required Rotation rotation = 2;
}

message Size {
  required float length = 1;
  required float width = 2;
  required float height = 3;
}

message GenContainerConfig {
  // The basic shape of the container.
  required Size size = 1;

  // If not provided, mesh will be generated by following parameters.
  optional string mesh_filepath = 2;

  // More detailed parameters for mesh generation.
  optional float thickness = 3;
  optional float wave_step = 4;
  optional float wave_height = 5;
}

enum BinPackingMethod {
  SimpleStacking = 0;
}

message BinPackingAlgorithm {
  required BinPackingMethod method = 2;
  optional Size bin_size = 3;
}

message BoxRandomization {
  // new_value = origin_val + random(range)
  optional Range length_range = 1;
  optional Range width_range = 2;
  optional Range height_range = 3;
  optional Range x_range = 4;
  optional Range y_range = 5;
  optional Range z_range = 6;
  optional Range euler_x_range = 7;
  optional Range euler_y_range = 8;
  optional Range euler_z_range = 9;
}

message PackingPhysics {
  optional float drop_height = 2;
  optional uint32 num_steps = 3;
}

message GenPackingConfig {
  // The sizes of the items to be packed.
  repeated Size size_list = 1;

  // If not provided, the poses of the items will be determined by
  // internal bin-packing algorithm
  repeated Pose pose_list = 2;

  // bin-packing algorithm configuration
  optional BinPackingAlgorithm bin_packing_algorithm = 3;

  // size + position + rotation randomization
  optional BoxRandomization randomization = 4;

  // free fall simulation
  optional PackingPhysics physics = 5;
}

message NewSceneRequest {
  required GenContainerConfig container_config = 1;
  optional GenPackingConfig packing_config = 2;
}
